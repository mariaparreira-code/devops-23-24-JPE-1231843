pipeline {

    agent any

     environment {
            DOCKER_CREDENTIALS_ID = 'dockerhub_credentials'
            DOCKER_IMAGE = 'maria/springbootapp'
            DOCKER_TAG = "${env.BUILD_ID}"
        }

        stages {

            stage('Checkout') {
                steps {
                    git branch: 'main', url: 'https://github.com/mariaparreira-code/devops-23-24-JPE-1231843.git'
                }
            }

            stage('Assemble') {
                steps {
                    dir('CA2.Part2/demoWithGradle') {
                        sh './gradlew assemble'
                    }
                }
            }

            stage('Test') {
                steps {
                    dir('CA2.Part2/demoWithGradle') {
                        sh './gradlew test'
                    }
            }
            post {
                always {
                    junit '**/build/test-results/**/*.xml'
                    }
                }
            }

            stage('Javadoc') {
                           steps {
                               dir('CA2.Part2/demoWithGradle') {
                                   sh './gradlew javadoc'
                                   publishHTML(target: [
                                       allowMissing: false,
                                       alwaysLinkToLastBuild: false,
                                       keepAll: true,
                                       reportDir: 'CA2.Part2/demoWithGradle/build/docs/javadoc',
                                       reportFiles: 'index.html',
                                       reportName: 'Javadoc'
                                   ])
                               }
                           }
             }


            stage('Archive') {
            steps {
                archiveArtifacts artifacts: '**/build/libs/*.jar', fingerprint: true
                }
            }



            stage('Publish Image') {
                steps {
                    script {
                        echo 'Building and publishing Docker image...'
                        docker.withRegistry('https://index.docker.io/v1/', "${DOCKER_CREDENTIALS_ID}") {
                            dir('CA2.Part2/demoWithGradle') {
                                def customImage = docker.build("${DOCKER_IMAGE}:${DOCKER_TAG}")
                                customImage.push()
                                customImage.push('latest')
                            }
                        }
                    }
                }
            }
        }
    }


